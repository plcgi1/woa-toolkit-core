=head1 NAME

WOA::Manual::Intro - Introduction to WOA && WOAx

=head1 DESCRIPTION

This is a brief introduction to WOA/WOAx. It explains the most important
features of how WOA works and shows how to get a simple application
up and running quickly.
For a systematic step-by-step introduction to writing an application
with WOA, see L<WOA::Manual::Tutorial>.

=head2 What is WOA?

WOA - web oriented architecture -  is an application toolkit for restable web,
extremely flexible yet extremely simple.
Good organisation of modules structure - is an easy support and development  
You can use WOA with any frameworks,like L<Catalyst>,L<Plack>,L<Mojo>
At this moment exists automated creating application with L<Plack>
Automated creation for WOA services with other frameworks(L<Catalyst>,L<Plack>,L<Mojo>) - TODO

=head3 MVC

WOA can be used with the Model-View-Controller (MVC) design pattern,
allowing you to easily separate concerns, like content, presentation,
and flow control, into separate modules. This separation allows you to
modify code that handles one concern without affecting code that handles
the others.

Here's how the Model, View, and Controller map to those concerns, with
examples of well-known Perl modules you may want to use for each.

=over 4

=item * B<Model>

Access and modify content (data). L<DBIx::Class>, L<Class::DBI>,
L<Xapian>, L<Net::LDAP>...

=item * B<View>

Present content to the user. L<Template Toolkit|Template>,

=item * B<Controller>

Control the whole request phase, check parameters, dispatch actions, flow
control.All controller actions and logic - in Backend modules

=back

If you're unfamiliar with MVC and design patterns, you may want to
check out the original book on the subject, I<Design Patterns>, by
Gamma, Helm, Johnson, and Vlissides, also known as the Gang of Four
(GoF).  Many, many web application frameworks are based on MVC, which
is becoming a popular design paradigm for the world wide web.

=head3 Flexibility

WOA is much more flexible than many other frameworks. Rest assured
you can use your favorite Perl modules with WOA.

=back

For more testing ideas, see L<Catalyst::Manual::Tutorial::Testing>.

Have fun!

=head1 SEE ALSO

=over 4

=item * L<WOA::Manual::FAQ>

=item * L<WOA::Manual::Tutorial::01_Basics>

=item * L<WOA::Manual::Tutorial::02_Route>

=item * L<WOA::Manual::DevelopmentProcess>

=back

=head1 SUPPORT

Wiki:

    []

FAQ:

    []

=head1 THANKS FOR

L<Catalyst> developer command

L<PSGI> | L<Plack> developer command

L<Mojo> developer command

L<DBIx::Class> developer command


=head1 AUTHORS

Nosoff Alex, C<plcgi1@gmail.com>

=head1 COPYRIGHT

This library is free software. You can redistribute it and/or modify it under
the same terms as Perl itself.

=cut
